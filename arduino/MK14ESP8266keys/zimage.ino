
void sendFavIcon(){

  Serial.println("Favicon requested");  

  sendFavicon();
  
}


void sendFavicon()
{
  // create a favion: https://www.favicon.cc/
  // convert to hex: http://tomeko.net/online_tools/file_to_hex.php?lang=en or https://www.onlinehexeditor.com/
  // Please note that if PROGMEM variables are not globally defined, 
  // you have to define them locally with static keyword, in order to work with PROGMEM.

  // beer glass from FreeFavicon.com
  const static uint8_t tblFavicon[] PROGMEM = {0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 0x00, 0x0D, 0x49, 0x48, 0x44, 0x52, 
                                               0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x08, 0x04, 0x00, 0x00, 0x00, 0xB5, 0xFA, 0x37, 
                                               0xEA, 0x00, 0x00, 0x00, 0x02, 0x62, 0x4B, 0x47, 0x44, 0x00, 0xFF, 0x87, 0x8F, 0xCC, 0xBF, 0x00, 
                                               0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x48, 0x00, 
                                               0x46, 0xC9, 0x6B, 0x3E, 0x00, 0x00, 0x00, 0xE1, 0x49, 0x44, 0x41, 0x54, 0x28, 0xCF, 0x65, 0xCF, 
                                               0xB1, 0x4A, 0xC3, 0x00, 0x10, 0xC6, 0xF1, 0x5F, 0x54, 0x92, 0x4A, 0xA1, 0x58, 0x05, 0xD1, 0xCD, 
                                               0xD9, 0x2D, 0x5B, 0x1D, 0x44, 0x7C, 0x09, 0x71, 0xF6, 0x69, 0x7C, 0x0A, 0x67, 0xF1, 0x15, 0x3A, 
                                               0x89, 0x83, 0x6E, 0x69, 0x29, 0x38, 0x74, 0x2F, 0x16, 0x25, 0x52, 0x0A, 0xA5, 0x69, 0xA1, 0x8D, 
                                               0x43, 0x6B, 0x9B, 0xA4, 0x77, 0xC3, 0x1D, 0x77, 0x7F, 0xEE, 0xFB, 0x2E, 0xB0, 0x8A, 0x3B, 0xD7, 
                                               0x62, 0xC7, 0x22, 0x33, 0xBF, 0x12, 0x6F, 0x5E, 0x56, 0x8B, 0x60, 0x0D, 0x24, 0x3E, 0x7D, 0xF8, 
                                               0x36, 0x13, 0x39, 0xD5, 0x72, 0x29, 0x56, 0x8A, 0xA4, 0x34, 0x88, 0x25, 0xFF, 0xED, 0xDE, 0x66, 
                                               0x18, 0x14, 0x80, 0x60, 0xB7, 0x1D, 0x7B, 0xF7, 0x6A, 0x28, 0x53, 0x73, 0xE6, 0xC6, 0x95, 0x46, 
                                               0x19, 0x98, 0x08, 0x4D, 0x65, 0x16, 0xF6, 0xD5, 0x1C, 0x9A, 0xAB, 0x97, 0x3D, 0xF4, 0x2C, 0xE5, 
                                               0x9B, 0x5C, 0xEA, 0x55, 0x3D, 0xF4, 0x2D, 0x0A, 0xF8, 0x42, 0xBF, 0x0A, 0xB4, 0x8D, 0x0A, 0xC0, 
                                               0x48, 0xBB, 0x0A, 0x74, 0x0C, 0x0A, 0xC0, 0x40, 0x67, 0x57, 0xA2, 0xCB, 0xDA, 0x01, 0xDD, 0xAD, 
                                               0xC4, 0xC1, 0xBA, 0x4E, 0x0D, 0x7D, 0x49, 0xE5, 0x02, 0x27, 0x86, 0xA6, 0x55, 0x20, 0x37, 0xF1, 
                                               0xE8, 0xC9, 0x5C, 0xE8, 0xC1, 0x91, 0xBC, 0x2A, 0x11, 0x6A, 0x48, 0x65, 0xE6, 0x32, 0xA9, 0x86, 
                                               0xB0, 0x7A, 0xA1, 0xE9, 0x42, 0x84, 0x89, 0xBA, 0x96, 0x73, 0x4D, 0xE3, 0x32, 0x30, 0xD2, 0x76, 
                                               0xEF, 0x56, 0x64, 0xE6, 0xC7, 0xF3, 0xF6, 0xE9, 0x3F, 0x44, 0x69, 0x48, 0xF0, 0x32, 0x8E, 0x4A, 
                                               0xFB, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4E, 0x44, 0xAE, 0x42, 0x60, 0x82
                                               };
  
  
  
  // from https://github.com/esp8266/Arduino/blob/master/libraries/ESP8266WebServer/examples/FSBrowser/FSBrowser.ino

  // use HTTP/1.1 Chunked response to avoid building a huge temporary string
  if (!webServer.chunkedResponseModeStart(200, "image/x-icon")) {
    webServer.send(505, F("text/html"), F("HTTP1.1 required"));
    return;
  }
  int arraypos=0;
  char output[64];
  byte onebyte;
  int charnum;
  Serial.print("sizeof(tblFavicon) = ");
  Serial.println(sizeof(tblFavicon));
  // output.reserve(64);
  do {
    //Serial.println("converting array");
    //output="";
    for (charnum=0;charnum<32;charnum++){
        //Serial.println("character " + String(arraypos));
        onebyte = pgm_read_byte_near(tblFavicon + arraypos); 
        output[charnum]=onebyte;
        // need to use pgm_read_byte
        arraypos++;
        if (arraypos > sizeof(tblFavicon) ){
          break;
        }
    }
    Serial.println("sending contents");
    Serial.println(charnum);
    if (charnum>0) {
      webServer.sendContent((const char*) output,charnum);
    }
    if (arraypos >= sizeof(tblFavicon) ){
      break;
    }
  }while (true);
  
 Serial.println("finalizing");

  webServer.chunkedResponseFinalize();
  
  
}
